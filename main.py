# -*- coding: utf-8 -*-
from bot_commands.profile import *
from bot_commands.budget import *
from bot_commands.projects import *
from bot_commands.marks import *
from bot_commands.inviting import *
# from bot_commands.tokens import *
from bot_commands.votings import *
# from bot_commands.expert_voting import *
from config import bot, db, cursor, get_keyboard, isRang
from emoji import emojize
import cherrypy
import webhook


@bot.message_handler(commands=['normalize'])
def norm(message):
    SetState(message.from_user.id, 6, cursor, db)


# @bot.message_handler(commands=['want_to_become_admin'])
# def admin(message):
#     AddRang(message.from_user.id, 9, cursor, db)


@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.type == 'private':
        id = message.from_user.id
        nick = '@' + message.from_user.username
        if not (IsUserInDB(id, nick, cursor)):
            keyboard = telebot.types.InlineKeyboardMarkup()
            url_button = telebot.types.InlineKeyboardButton(text="–ù–∞—à –∫–∞–Ω–∞–ª",
                                                            url="https://t.me/joinchat/FcADIxGou--U0fMfLs9Tvg")
            keyboard.add(url_button)
            bot.send_message(message.chat.id,
                             "–ü—Ä–∏–≤–µ—Ç. –°–µ–π—á–∞—Å —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª. –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ –∫–æ–º—å—é–Ω–∏—Ç–∏ - –Ω–∞–ø–∏—à–∏ —Ç—É–¥–∞ –∏ —Ç–µ–±–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç—è—Ç.",
                             reply_markup=keyboard)
        elif IsAbit(nick, cursor, True):
            SetId(nick, id, cursor, db)
            bot.send_message(message.chat.id,
                             "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∞–Ω—Ç–∏—à–∫–æ–ª—ã –ö–æ—Ä–ø—É—Å, –º–Ω–µ —Å–∫–∞–∑–∞–ª–∏ —á—Ç–æ —Ç—ã –Ω–∞—à –Ω–æ–≤—ã–π –∫—É—Ä—Å–∞–Ω—Ç, –¥–∞–≤–∞–π —è –∑–∞–Ω–µ—Å—É —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É. –ù–∞—á–Ω—ë–º —Å –∏–º–µ–Ω–∏, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç (–∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è)?")
            SetState(id, 1, cursor, db)
        elif IsInvitedInvestor(nick, cursor, True):
            SetId(nick, id, cursor, db)
            bot.send_message(message.chat.id,
                             "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –±–æ—Ç –∞–Ω—Ç–∏-—à–∫–æ–ª—ã –ö–æ—Ä–ø—É—Å. –Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∞—Ç—å —Å –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–æ–π. –î–∞–≤–∞–π—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–Ω–µ—Å—ë–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—à—É –±–∞–∑—É. –ù–∞—á–Ω—ë–º —Å –∏–º–µ–Ω–∏. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è")
            SetState(id, 1, cursor, db)
        elif IsInvitedTutor(nick, cursor, True):
            SetId(nick, id, cursor, db)
            bot.send_message(message.chat.id,
                             "–î–æ–±—Ä—ã–π –¥–µ–Ω—å. –í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã —Ç—å—é—Ç–æ—Ä–æ–º –∞–Ω—Ç–∏-—à–∫–æ–ª—ã –ö–æ—Ä–ø—É—Å. –î–∞–≤–∞–π—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–Ω–µ—Å—ë–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—à—É –±–∞–∑—É. –ù–∞—á–Ω—ë–º —Å –∏–º–µ–Ω–∏. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è")
            SetState(id, 1, cursor, db)
        elif IsInvitedExpert(nick, cursor, True):
            SetId(nick, id, cursor, db)
            bot.send_message(message.chat.id,
                             "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, —É–≤–∞–∂–∞–µ–º—ã–π —ç–∫—Å–ø–µ—Ä—Ç. –í—ã —Å—Ç–∞–ª–∏ —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ –∫–æ–º–º—å—é–Ω–∏—Ç–∏. –î–∞–≤–∞–π—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–Ω–µ—Å—ë–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—à—É –±–∞–∑—É. –ù–∞—á–Ω—ë–º —Å –∏–º–µ–Ω–∏. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è")
            SetState(id, 1, cursor, db)
        elif IsInvitedEducator(nick, cursor, True):
            SetId(nick, id, cursor, db)
            bot.send_message(message.chat.id,
                             "–î–æ–±—Ä—ã–π –¥–µ–Ω—å. –í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∞–Ω—Ç–∏-—à–∫–æ–ª—ã –ö–æ—Ä–ø—É—Å. –î–∞–≤–∞–π—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–Ω–µ—Å—ë–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—à—É –±–∞–∑—É. –ù–∞—á–Ω—ë–º —Å –∏–º–µ–Ω–∏. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è")
            SetState(id, 1, cursor, db)
        else:
            bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                             reply_markup=get_keyboard(message.from_user.id))


@bot.message_handler(commands=['let_me_become_admin'])
def admin(message):
    AddRang(message.from_user.id, 9, cursor, db)
    bot.send_message(message.chat.id, 'Ok', reply_markup=get_keyboard(message.from_user.id))
#
# @bot.message_handler(func=lambda message: GetState(message.from_user.username, cursor) == 0)
# def user_start(message):
#     start(message)


@bot.message_handler(content_types=["text"])
def text(message):
    if not (IsUserInDB(message.from_user.id, '@' + message.from_user.username, cursor)):
        start(message)
    elif message.chat.type == 'private':
        mess = message.text
        cherrypy.log(message.text)
        if mess == 'üìÇ –ü—Ä–æ–µ–∫—Ç—ã':
            projectsMenu(message)
        elif mess == 'üìä –û—Ü–µ–Ω–∫–∏':
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            if IsUserTeamlead(message.from_user.id, cursor):
                keyboard.add(emojize(':crown: –û—Ü–µ–Ω–∫–∞ –Ω–µ–º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –≤–∫–ª–∞–¥–∞'))
                #keyboard.add('–û—Ü–µ–Ω–∫–∞ –≤–∫–ª–∞–¥–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤')
            if isRang(GetRangs(message.from_user.id, cursor), [5, 8, 9, 10]):
                keyboard.row(emojize(':eyes: –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏'), emojize(':newspaper: –û—Ü–µ–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'))
            else:
                keyboard.add(emojize(':eyes: –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏'))
            if isRang(GetRangs(message.from_user.id, cursor), [9]):
                keyboard.add('–ü–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏ –æ—Ü–µ–Ω–æ–∫ –≤–∫–ª–∞–¥–∞')
            keyboard.add('–ù–∞–∑–∞–¥')
            bot.send_message(message.chat.id, '–í–∫–ª–∞–¥–∫–∞ <b>"–û—Ü–µ–Ω–∫–∏"</b>', reply_markup=keyboard, parse_mode='HTML')
        elif mess == '–û—Ü–µ–Ω–∫–∞ –≤–∫–ª–∞–¥–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤':
            # start_expert_voting(message)
            pass
        elif mess == 'üëë –û—Ü–µ–Ω–∫–∞ –Ω–µ–º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –≤–∫–ª–∞–¥–∞':
            contribution(message)
        elif mess == 'üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏':
            marks_of(message, message.from_user.id)
        elif mess == 'üìã –ü—Ä–æ—Ñ–∏–ª—å':
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            keyboard.row(emojize(':eyes: –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'),
                         emojize(':scissors: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'),
                         emojize(':name_badge: –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'))
            keyboard.add(emojize(':newspaper: –ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'))
            keyboard.add(emojize('–ù–∞–∑–∞–¥'))
            bot.send_message(message.chat.id, '–í–∫–ª–∞–¥–∫–∞ <b>"–ü—Ä–æ—Ñ–∏–ª—å"</b>', reply_markup=keyboard, parse_mode='HTML')
        elif mess == '‚ûïüìì –î–æ–±–∞–≤–∏—Ç—å –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤':
            add_abit(message)
        elif mess == 'üëî –§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞':
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            keyboard.add('–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º—É')
            keyboard.row('–£–∫–∞–∑–∞—Ç—å —Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–£–±—Ä–∞—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
            if IsThereActiveVoting(cursor):
                keyboard.add('–ó–∞–∫–æ–Ω—á–∏—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞')
            else:
                keyboard.add(emojize(':loudspeaker: –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞'))
            keyboard.add('–ù–∞–∑–∞–¥')
            bot.send_message(message.chat.id, '–í–∫–ª–∞–¥–∫–∞ <b>"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"</b>', reply_markup=keyboard,
                             parse_mode='HTML')
        elif mess == '–£–∫–∞–∑–∞—Ç—å —Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
            set_rang(message)
        elif mess == '–£–±—Ä–∞—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
            delete_rang(message)
        elif mess == '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º—É':
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            keyboard.row(emojize(':heavy_plus_sign::notebook: –î–æ–±–∞–≤–∏—Ç—å –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤'),
                         emojize(':heavy_plus_sign::money_with_wings: –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤'))
            keyboard.row(emojize(':heavy_plus_sign::trophy: –î–æ–±–∞–≤–∏—Ç—å —Ç—å—é—Ç–æ—Ä–æ–≤'),
                         emojize(':heavy_plus_sign::microscope: –î–æ–±–∞–≤–∏—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–æ–≤'))
            keyboard.add(emojize(':heavy_plus_sign::pencil: –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π'))
            keyboard.add('–ù–∞–∑–∞–¥')
            bot.send_message(message.chat.id, '–ö–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?', reply_markup=keyboard)
        elif mess == '‚ûïüèÜ –î–æ–±–∞–≤–∏—Ç—å —Ç—å—é—Ç–æ—Ä–æ–≤':
            add_tutor(message)
        elif mess == '‚ûïüî¨ –î–æ–±–∞–≤–∏—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–æ–≤':
            add_expert(message)
        elif mess == '‚ûï‚úè –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π':
            add_educator(message)
        elif mess == 'üí≥ –§—É–Ω–∫—Ü–∏–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞':
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            keyboard.row('–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', '–ü—Ä–æ–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º')
            keyboard.row('–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —É —Å–∏—Å—Ç–µ–º—ã', '–ü—Ä–æ–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã —Å–∏—Å—Ç–µ–º–µ')
            keyboard.add('–ù–∞–∑–∞–¥')
            bot.send_message(message.chat.id, '–í–∫–ª–∞–¥–∫–∞ <b>"–ò–Ω–≤–µ—Å—Ç–æ—Ä"</b>', reply_markup=keyboard, parse_mode='HTML')
        elif mess == 'üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
            get_profile(message)

        elif mess == '‚úÇ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
            red_profile(message)
        elif mess == 'üìõ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
            reset(message)
        elif mess == '‚ûïüí∏ –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤':
            add_investor(message)
        elif mess == 'üì∞ –ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
            look_profiles(message)
        elif mess == 'üì∞ –û—Ü–µ–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
            look_marks(message)
        elif mess == "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç":
            project_switch(message, 1)
        elif mess == "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç":
            project_switch(message, 2)
        elif mess == "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤":
            project_switch(message, 3)
        elif mess == '–ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                             reply_markup=get_keyboard(message.from_user.id))
        elif mess == 'üì¢ –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞':
            send_budget_offer(message)
        elif mess == '–ó–∞–∫–æ–Ω—á–∏—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞':
            finish_budget(message)
        elif mess == '–§—É–Ω–∫—Ü–∏–∏ —Ç—å—é—Ç–æ—Ä–∞':
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            keyboard.add(emojize(':heavy_plus_sign::notebook: –î–æ–±–∞–≤–∏—Ç—å –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤'))
            keyboard.row('–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
            keyboard.add('–ù–∞–∑–∞–¥')
            bot.send_message(message.chat.id, '–í–∫–ª–∞–¥–∫–∞ <b>"–¢—å—é—Ç–æ—Ä"</b>', reply_markup=keyboard, parse_mode='HTML')
        elif mess == '–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é':
            add_dosier(message)
        elif mess == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
            look_dosier(message)
        elif mess == 'üåê –¢–æ–∫–µ–Ω—ã' or mess == '–í–µ—Ä–Ω—É—Ç—å—Å—è':
            # keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            # keyboard.add(emojize(':performing_arts: –û–±–º–µ–Ω—è—Ç—å—Å—è —Ç–æ–∫–µ–Ω–∞–º–∏ –≤–∫–ª–∞–¥–∞'))
            # keyboard.add(emojize(':currency_exchange: –û–±–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –Ω–∞ —Ç–æ–∫–µ–Ω—ã –≤–∫–ª–∞–¥–∞'))
            # keyboard.add('–ù–∞–∑–∞–¥')
            # bot.send_message(message.chat.id, '–†–∞–±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –ö–æ—Ä–ø—É—Å–∞', reply_markup=keyboard)
            bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
                             reply_markup=get_keyboard(message.from_user.id))
        elif mess == 'üé≠ –û–±–º–µ–Ω—è—Ç—å—Å—è —Ç–æ–∫–µ–Ω–∞–º–∏ –≤–∫–ª–∞–¥–∞':
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            keyboard.row('–ü–æ–ø—Ä–æ—Å–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –≤–∫–ª–∞–¥–∞', '–ü–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã –≤–∫–ª–∞–¥–∞')
            keyboard.add('–í–µ—Ä–Ω—É—Ç—å—Å—è')
            bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ?', reply_markup=keyboard)
        # elif mess == '–ü–æ–ø—Ä–æ—Å–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –≤–∫–ª–∞–¥–∞':
        #     ask_tokens(message)
        # elif mess == '–ü–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã –≤–∫–ª–∞–¥–∞':
        #     give_tokens(message)
        # elif mess == 'üí± –û–±–º–µ–Ω—è—Ç—å —Ç–æ–∫–µ–Ω—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –Ω–∞ —Ç–æ–∫–µ–Ω—ã –≤–∫–ª–∞–¥–∞':
        #     change_investment_tokens(message)
        elif mess in ['hi', 'Hi', '–ü—Ä–∏–≤–µ—Ç', '–ø—Ä–∏–≤–µ—Ç', 'hello', 'Hello']:
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, ' + message.from_user.id,
                             reply_markup=get_keyboard(message.from_user.id))
        elif mess in ['–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', '–ü—Ä–æ–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', '–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —É —Å–∏—Å—Ç–µ–º—ã',
                      '–ü—Ä–æ–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã —Å–∏—Å—Ç–µ–º–µ']:
            bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
                             reply_markup=get_keyboard(message.from_user.id))
        else:
            bot.send_message(message.chat.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞',
                             reply_markup=get_keyboard(message.from_user.id))


def full_clean():
    cursor.execute('DELETE FROM projects')
    cursor.execute('DELETE FROM teams')
    cursor.execute('delete from users')
    cursor.execute('delete from votings')
    cursor.execute('delete from users_tokens')
    cursor.execute('delete from exchanges')
    cursor.execute('delete from marks')
    cursor.execute('delete from orders')
    cursor.execute('delete from emission_data')
    cursor.execute('delete from votings_experts')
    cursor.execute('delete from votings_info')
    cursor.execute('delete from expert_voting')
    # cursor.execute('delete from expert_voting_info')
    cursor.execute('delete from voting_teamleads')
    cursor.execute('delete from expert_marks')
    db.commit()


# webhook.start()
# full_clean()
# AddAbit('@m_wizmo', cursor, db)
# AddAbit('@robertlengdon', cursor, db)
# cursor.execute('SELECT * FROM votings')
# a = cursor.fetchall()
# b = GetNextExpertForVoting('@m_wizmo', GetCurrentPreparingExpertVoting(cursor), cursor)
# AddRang('@m_wizmo', 9, cursor, db)
# bot.delete_webhook()
# cursor.execute('delete from marks')
# cursor.execute('delete from votings')
# cursor.execute('delete from votings_info')
# cursor.execute('delete from votings_experts')
# db.commit()
# import time
# while True:
#     try:
bot.polling(none_stop=True)
    # except Exception as e:
    #     bot.stop_polling()
    #     print(e)
    #     time.sleep(3)
